.text-center {
  text-align: center; }

.fw-900 {
  font-weight: 900; }

.text-uppercase {
  text-transform: uppercase; }

.lh-heading {
  line-height: 1.2; }

.lh-1 {
  line-height: 1; }

.mb-0 {
  margin-bottom: 0; }

.mt-0 {
  margin-top: 0; }

.d-block {
  display: block; }

.d-inline {
  display: inline; }

@media (min-width: 576px) {
  .d-sm-inline-block {
    display: inline-block; } }

.bg-orange {
  background-color: #f58220; }

.text-orange {
  color: #f58220; }

.fill-orange {
  fill: #f58220; }

.link-orange {
  color: #f58220; }
  .link-orange:hover {
    color: #b86218; }

.bg-purple {
  background-color: #62489d; }

.text-purple {
  color: #62489d; }

.fill-purple {
  fill: #62489d; }

.link-purple {
  color: #62489d; }
  .link-purple:hover {
    color: #4a3676; }

.bg-teal {
  background-color: #017581; }

.text-teal {
  color: #017581; }

.fill-teal {
  fill: #017581; }

.link-teal {
  color: #017581; }
  .link-teal:hover {
    color: #015861; }

.bg-gray {
  background-color: #e7e7e8; }

.text-gray {
  color: #e7e7e8; }

.fill-gray {
  fill: #e7e7e8; }

.link-gray {
  color: #e7e7e8; }
  .link-gray:hover {
    color: #adadae; }

.bg-blue {
  background-color: #003c69; }

.text-blue {
  color: #003c69; }

.fill-blue {
  fill: #003c69; }

.link-blue {
  color: #003c69; }
  .link-blue:hover {
    color: #002d4f; }

.bg-black {
  background-color: #333; }

.text-black {
  color: #333; }

.fill-black {
  fill: #333; }

.link-black {
  color: #333; }
  .link-black:hover {
    color: #262626; }

.bg-white {
  background-color: #fff; }

.text-white {
  color: #fff; }

.fill-white {
  fill: #fff; }

.link-white {
  color: #fff; }
  .link-white:hover {
    color: #bfbfbf; }

button, [type='button'], [type='reset'], [type='submit'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #003c69;
  border: 0;
  border-radius: 3px;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Open Sans", sans-serif, -apple-system, BlinkMacSystemFont, "Avenir Next", "Avenir", "Segoe UI", "Lucida Grande", "Helvetica Neue", "Helvetica", "Fira Sans", "Roboto", "Noto", "Droid Sans", "Cantarell", "Oxygen", "Ubuntu", "Franklin Gothic Medium", "Century Gothic", "Liberation Sans", sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 0.75rem 1.5rem;
  text-align: center;
  text-decoration: none;
  transition: background-color 150ms ease;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: middle;
  white-space: nowrap; }
  button:hover, [type='button']:hover, [type='reset']:hover, [type='submit']:hover {
    background-color: #003054;
    color: #fff; }
  button:focus, [type='button']:focus, [type='reset']:focus, [type='submit']:focus {
    outline: 3px solid rgba(0, 60, 105, 0.6);
    outline-offset: 2px; }
  button:disabled, [type='button']:disabled, [type='reset']:disabled, [type='submit']:disabled {
    cursor: not-allowed;
    opacity: 0.5; }
    button:disabled:hover, [type='button']:disabled:hover, [type='reset']:disabled:hover, [type='submit']:disabled:hover {
      background-color: #003c69; }

fieldset {
  background-color: transparent;
  border: 0;
  margin: 0;
  padding: 0; }

legend {
  font-weight: 600;
  margin-bottom: 0.375rem;
  padding: 0; }

label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.375rem; }

input,
select,
textarea {
  display: block;
  font-family: "Open Sans", sans-serif, -apple-system, BlinkMacSystemFont, "Avenir Next", "Avenir", "Segoe UI", "Lucida Grande", "Helvetica Neue", "Helvetica", "Fira Sans", "Roboto", "Noto", "Droid Sans", "Cantarell", "Oxygen", "Ubuntu", "Franklin Gothic Medium", "Century Gothic", "Liberation Sans", sans-serif;
  font-size: 16px; }

[type='color'], [type='date'], [type='datetime'], [type='datetime-local'], [type='email'], [type='month'], [type='number'], [type='password'], [type='search'], [type='tel'], [type='text'], [type='time'], [type='url'], [type='week'], input:not([type]), textarea {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 3px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  margin-bottom: 0.75rem;
  padding: 0.5rem;
  transition: border-color 150ms ease;
  width: 100%; }
  [type='color']:hover, [type='date']:hover, [type='datetime']:hover, [type='datetime-local']:hover, [type='email']:hover, [type='month']:hover, [type='number']:hover, [type='password']:hover, [type='search']:hover, [type='tel']:hover, [type='text']:hover, [type='time']:hover, [type='url']:hover, [type='week']:hover, input:not([type]):hover, textarea:hover {
    border-color: #b1b1b1; }
  [type='color']:focus, [type='date']:focus, [type='datetime']:focus, [type='datetime-local']:focus, [type='email']:focus, [type='month']:focus, [type='number']:focus, [type='password']:focus, [type='search']:focus, [type='tel']:focus, [type='text']:focus, [type='time']:focus, [type='url']:focus, [type='week']:focus, input:not([type]):focus, textarea:focus {
    border-color: #003c69;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(0, 60, 105, 0.7);
    outline: none; }
  [type='color']:disabled, [type='date']:disabled, [type='datetime']:disabled, [type='datetime-local']:disabled, [type='email']:disabled, [type='month']:disabled, [type='number']:disabled, [type='password']:disabled, [type='search']:disabled, [type='tel']:disabled, [type='text']:disabled, [type='time']:disabled, [type='url']:disabled, [type='week']:disabled, input:not([type]):disabled, textarea:disabled {
    background-color: #f2f2f2;
    cursor: not-allowed; }
    [type='color']:disabled:hover, [type='date']:disabled:hover, [type='datetime']:disabled:hover, [type='datetime-local']:disabled:hover, [type='email']:disabled:hover, [type='month']:disabled:hover, [type='number']:disabled:hover, [type='password']:disabled:hover, [type='search']:disabled:hover, [type='tel']:disabled:hover, [type='text']:disabled:hover, [type='time']:disabled:hover, [type='url']:disabled:hover, [type='week']:disabled:hover, input:not([type]):disabled:hover, textarea:disabled:hover {
      border: 1px solid #ddd; }
  [type='color']:-ms-input-placeholder, [type='date']:-ms-input-placeholder, [type='datetime']:-ms-input-placeholder, [type='datetime-local']:-ms-input-placeholder, [type='email']:-ms-input-placeholder, [type='month']:-ms-input-placeholder, [type='number']:-ms-input-placeholder, [type='password']:-ms-input-placeholder, [type='search']:-ms-input-placeholder, [type='tel']:-ms-input-placeholder, [type='text']:-ms-input-placeholder, [type='time']:-ms-input-placeholder, [type='url']:-ms-input-placeholder, [type='week']:-ms-input-placeholder, input:not([type]):-ms-input-placeholder, textarea:-ms-input-placeholder {
    color: #858585; }
  [type='color']::placeholder, [type='date']::placeholder, [type='datetime']::placeholder, [type='datetime-local']::placeholder, [type='email']::placeholder, [type='month']::placeholder, [type='number']::placeholder, [type='password']::placeholder, [type='search']::placeholder, [type='tel']::placeholder, [type='text']::placeholder, [type='time']::placeholder, [type='url']::placeholder, [type='week']::placeholder, input:not([type])::placeholder, textarea::placeholder {
    color: #858585; }

textarea {
  resize: vertical; }

[type="checkbox"],
[type="radio"] {
  display: inline;
  margin-right: 0.375rem; }

[type="file"] {
  margin-bottom: 0.75rem;
  width: 100%; }

select {
  margin-bottom: 0.75rem;
  width: 100%; }

[type="checkbox"]:focus,
[type="radio"]:focus,
[type="file"]:focus,
select:focus {
  outline: 3px solid rgba(0, 60, 105, 0.6);
  outline-offset: 2px; }

html {
  background-color: #fff;
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

html,
body {
  height: 100%; }

body {
  margin: 0; }

.container {
  margin: auto;
  max-width: 1200px;
  padding: 0 1rem; }
  .container::after {
    clear: both;
    content: "";
    display: block; }

.page-section,
.small-section {
  background-attachment: fixed;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  box-sizing: border-box;
  display: block;
  overflow: hidden;
  padding: 140px 0;
  position: relative;
  width: 100%; }
  @media only screen and (max-width: 480px) {
    .page-section,
    .small-section {
      padding: 60px 0; } }
  @media only screen and (max-width: 768px) {
    .page-section,
    .small-section {
      padding: 80px 0; } }

.small-section {
  padding: 70px 0; }
  @media only screen and (max-width: 480px) {
    .small-section {
      padding: 30px 0; } }
  @media only screen and (max-width: 768px) {
    .small-section {
      padding: 50px 0; } }

@media only screen and (max-width: 1024px) {
  .page-section,
  .home-section,
  .small-section {
    background-attachment: scroll; } }

.mobile .page-section,
.mobile .home-section,
.mobile .small-section {
  background-attachment: scroll; }

.home-section {
  background-attachment: fixed;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  overflow: hidden;
  position: relative;
  width: 100%; }

.fixed-height-small {
  box-sizing: border-box;
  min-height: 600px; }
  @media only screen and (max-width: 480px) {
    .fixed-height-small {
      min-height: 300px; } }

ul,
ol {
  list-style-type: none;
  margin: 0;
  padding: 0; }

dl {
  margin: 0; }

dt {
  font-weight: 600;
  margin: 0; }

dd {
  margin: 0; }

.inline-list li {
  display: inline-block;
  margin-right: 1.5rem; }
  .inline-list li:last-of-type {
    margin-right: 0; }

figure {
  margin: 0; }

img,
picture {
  margin: 0;
  max-width: 100%; }

.video-wrapper {
  height: 0;
  margin-bottom: 1.5rem;
  overflow: hidden;
  padding-bottom: 56.25%;
  position: relative; }
  .video-wrapper embed,
  .video-wrapper object,
  .video-wrapper iframe {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%; }

table {
  border-collapse: collapse;
  margin: 1.5rem 0;
  table-layout: fixed;
  text-align: left;
  width: 100%; }

thead {
  line-height: 1.2;
  vertical-align: bottom; }

tbody {
  vertical-align: top; }

tr {
  border-bottom: 1px solid #ddd; }

th {
  font-weight: 600; }

th,
td {
  padding: 0.75rem 0.75rem 0.75rem 0; }

html {
  color: #333;
  font-family: "Open Sans", sans-serif, -apple-system, BlinkMacSystemFont, "Avenir Next", "Avenir", "Segoe UI", "Lucida Grande", "Helvetica Neue", "Helvetica", "Fira Sans", "Roboto", "Noto", "Droid Sans", "Cantarell", "Oxygen", "Ubuntu", "Franklin Gothic Medium", "Century Gothic", "Liberation Sans", sans-serif;
  font-size: 100%;
  line-height: 1.5; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Montserrat", sans-serif, "Open Sans", sans-serif, -apple-system, BlinkMacSystemFont, "Avenir Next", "Avenir", "Segoe UI", "Lucida Grande", "Helvetica Neue", "Helvetica", "Fira Sans", "Roboto", "Noto", "Droid Sans", "Cantarell", "Oxygen", "Ubuntu", "Franklin Gothic Medium", "Century Gothic", "Liberation Sans", sans-serif;
  font-size: 1.25em;
  line-height: 1.2;
  margin: 0 0 0.75rem; }

p {
  margin: 0 0 0.75rem; }

a {
  color: #003c69;
  text-decoration: none;
  -webkit-text-decoration-skip: ink;
          text-decoration-skip: ink;
  transition: color 150ms ease; }
  a:hover {
    color: #002d4f; }
  a:focus {
    outline: 3px solid rgba(0, 60, 105, 0.6);
    outline-offset: 2px; }

hr {
  border-bottom: 1px solid #ddd;
  border-left: 0;
  border-right: 0;
  border-top: 0;
  display: block;
  margin: 1.5rem 0;
  width: 70%; }

.lead {
  font-size: 1.25rem;
  font-weight: 300; }

.aside-section {
  margin-bottom: 1.5rem;
  text-align: center; }
  .aside-section svg {
    height: 100px; }
  .aside-section__title--headline {
    font-size: 3.75rem;
    font-weight: 900;
    overflow: hidden; }
    @media (min-width: 992px) {
      .aside-section__title--headline {
        line-height: 1; }
        .aside-section__title--headline span {
          display: block; } }
  @media (min-width: 992px) {
    .aside-section {
      margin-bottom: 0; }
      .aside-section__left {
        text-align: left; }
        .aside-section__left--content {
          width: calc(58.33333% - 31.66667px);
          float: left;
          margin-left: 20px; }
      .aside-section__right {
        text-align: right; }
      .aside-section__title {
        width: calc(41.66667% - 28.33333px);
        float: left;
        margin-left: 20px; } }

.section-title {
  display: block;
  font-size: 3.75rem;
  font-weight: 900;
  line-height: 1.2;
  margin-bottom: 0;
  overflow: hidden; }
  @media (min-width: 992px) {
    .section-title {
      line-height: 1; } }
  .section-title__aside {
    display: block;
    font-size: 3.75rem;
    font-weight: 900;
    line-height: 1.2;
    overflow: hidden;
    text-transform: uppercase; }
    @media (min-width: 992px) {
      .section-title__aside {
        line-height: 1; }
        .section-title__aside span {
          display: block; } }
    .section-title__aside small {
      font-size: 30px;
      font-weight: inherit; }
      .section-title__aside small.small-s {
        font-size: 60%; }

.arrow-header {
  background-color: #000;
  color: #fff;
  margin-bottom: 1.5rem;
  padding: 1.5rem;
  position: relative; }
  .arrow-header::before {
    position: absolute;
    top: 100%;
    left: 50%;
    border-style: solid;
    height: 0;
    width: 0;
    border-color: #000 transparent transparent;
    border-width: 1.5rem 1.5rem 0;
    content: '';
    margin-left: -0.75rem; }
  .arrow-header__orange {
    background-color: #f58220; }
    .arrow-header__orange::before {
      border-top-color: #f58220; }
  .arrow-header__teal {
    background-color: #017581; }
    .arrow-header__teal::before {
      border-top-color: #017581; }

.masthead {
  background-color: #f58220; }
  .masthead__wrap {
    -ms-flex-align: center;
        align-items: center;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    max-width: 100%; }
  .masthead__content {
    margin-top: 3.5rem;
    margin-bottom: 3.5rem;
    border-top-style: solid;
    border-bottom-style: solid;
    border-top-width: 2px;
    border-bottom-width: 2px;
    border-color: #fff;
    position: relative;
    transition: opacity .325s ease-in-out; }
    .masthead__content::before {
      background: #fff;
      content: '';
      display: block;
      height: calc(3.5rem + 2px);
      left: calc(50% - 2px);
      position: absolute;
      top: calc(-3.5rem - 2px);
      width: 2px; }
    .masthead__content--inner {
      color: #fff;
      padding: 3rem 2rem; }
    .masthead__content h1 {
      font-weight: 800;
      letter-spacing: .1rem; }
      @media (min-width: 600px) {
        .masthead__content h1 {
          font-size: 3rem;
          letter-spacing: .25rem; } }
    .masthead__content p {
      margin: 0.75rem auto 0;
      max-width: 800px; }
  .masthead__logo {
    height: 4.75rem;
    width: 4.75rem;
    border: solid 2px #fff;
    border-radius: 100%;
    line-height: 1;
    vertical-align: middle; }
    .masthead__logo svg {
      height: 4.5rem;
      width: 60%;
      display: inline-block;
      fill: #fff; }
    @media (min-width: 800px) {
      .masthead__logo {
        height: 5.5rem;
        width: 5.5rem; }
        .masthead__logo svg {
          height: 5.5rem; } }

.boxtitle-section {
  overflow: initial; }
  .boxtitle-section__title {
    height: 2.4em;
    width: 24em;
    display: block;
    font-size: .9em;
    font-weight: 700;
    left: 50%;
    letter-spacing: .25em;
    line-height: 2.4em;
    margin-bottom: -2.4em;
    margin-left: -12em;
    padding-top: 0.48em;
    position: absolute;
    text-align: center;
    text-transform: uppercase;
    top: -2.4em; }
    .boxtitle-section__title::before {
      left: -35px; }
    .boxtitle-section__title::after {
      right: -35px;
      -ms-transform: scaleX(-1);
          transform: scaleX(-1); }
    .boxtitle-section__title::before, .boxtitle-section__title::after {
      height: 38px;
      width: 35px;
      background: url("../img/shadow.png");
      bottom: -38px;
      content: '';
      position: absolute; }
      @media (max-width: 736px) {
        .boxtitle-section__title::before, .boxtitle-section__title::after {
          background-size: 100% 100%;
          bottom: -15px;
          height: 15px; } }
    @media (min-width: 737px) {
      .boxtitle-section__title {
        height: 3em;
        width: 30em;
        font-size: .9em;
        line-height: 3em;
        margin-bottom: -3em;
        margin-left: -15em;
        padding-top: .5em;
        top: -3em; } }

.intro-section {
  background: #62489d url("../img/overlay.png");
  color: rgba(255, 255, 255, 0.75); }
  .intro-section .boxtitle-section__title {
    background: #62489d url("../img/overlay.png");
    color: #fff; }
  .intro-section__copy {
    width: calc(33.33333% - 26.66667px);
    float: left;
    margin-left: 20px; }
  .intro-section__video {
    width: calc(58.33333% - 31.66667px);
    float: left;
    margin-left: 20px;
    left: calc(8.33333% - 21.66667px + 20px);
    position: relative; }

.progress-icons {
  color: #e7e7e8;
  font-size: 1.5rem;
  line-height: 1.3; }

.stat__large {
  font-size: 48px;
  font-weight: 900;
  line-height: 1.2; }
  @media (min-width: 576px) {
    .stat__large {
      font-size: 65px; } }
  @media (min-width: 768px) {
    .stat__large {
      font-size: 70px;
      margin-bottom: 0; } }
  @media (min-width: 992px) {
    .stat__large {
      font-size: 80px; } }
  .stat__large--disclaimer {
    font-size: 16px;
    line-height: 1.5; }
    @media (min-width: 768px) {
      .stat__large--disclaimer {
        font-size: 26px;
        letter-spacing: .02rem; } }
  .stat__large small {
    font-weight: inherit; }

.sub-large {
  display: none; }
  @media (min-width: 992px) {
    .sub-large {
      display: block; } }

.sub-small {
  display: block; }
  @media (min-width: 992px) {
    .sub-small {
      display: none; } }

.arrow-sec__flex-row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }
  @media (min-width: 1200px) {
    .arrow-sec__flex-row {
      -ms-flex-direction: row;
          flex-direction: row; }
      .arrow-sec__flex-row--item {
        -ms-flex-preferred-size: 0;
            flex-basis: 0;
        -ms-flex-positive: 1;
            flex-grow: 1;
        max-width: 100%; } }

.arrow-sec__title {
  font-size: 1.75rem; }

.icon-box {
  -ms-flex-pack: center;
      justify-content: center;
  margin-bottom: .75em;
  text-align: center; }
  @media (min-width: 576px) {
    .icon-box {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: row;
          flex-direction: row;
      text-align: left; } }
  @media (min-width: 992px) {
    .icon-box {
      margin-bottom: 0; } }
  .icon-box h1 {
    display: inline-block;
    font-size: 2.5rem;
    font-weight: 900;
    vertical-align: middle; }
  .icon-box__icon {
    -ms-flex-item-align: center;
        -ms-grid-row-align: center;
        align-self: center;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    -ms-flex-pack: center;
        justify-content: center;
    padding: .5rem; }
    .icon-box__icon svg {
      height: 70px;
      width: 70px;
      display: inline-block;
      margin-right: .375em;
      vertical-align: middle; }
  .icon-box__content {
    -ms-flex-item-align: center;
        -ms-grid-row-align: center;
        align-self: center;
    padding: .5rem;
    text-align: center;
    vertical-align: middle; }
    @media (min-width: 576px) {
      .icon-box__content {
        text-align: left; } }

.icon-sidexside svg {
  height: 100px;
  width: 100px;
  display: inline-block;
  vertical-align: middle; }

.icon-sidexside h1 {
  margin: 0 0 0 10px;
  display: inline-block;
  font-size: 60px;
  font-weight: 900;
  line-height: 1;
  text-align: center;
  text-overflow: ellipsis;
  vertical-align: middle; }
  .icon-sidexside h1 small {
    font-size: 40%;
    font-weight: 700;
    text-transform: uppercase; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
